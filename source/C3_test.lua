require "lunit"
require "utils"
local C3 = require("C3")

module("c3_test", lunit.testcase, package.seeall)

function test_c3_time_decode()
  assert_equal(os.time({year=2017, month=07, day=30, hour=15, min=24, sec=32}), C3.byte_array_to_time({0x21, 0xad, 0x99, 0x30}))
  assert_equal(os.time({year=2017, month=07, day=30, hour=15, min=24, sec=32}), C3.byte_array_to_time(reverse_array({0x30, 0x99, 0xad, 0x21})))
  assert_equal(os.time({year=2013, month=10, day=8, hour=14, min=38, sec=32}),  C3.byte_array_to_time({0x1a, 0x61, 0x70, 0xe8}))
end

-- function test_c3_connect_disconnect()
--   C3.connect("192.168.3.103")
--   print("SessionId: " .. C3.SessionId())
--   C3.disconnect()
-- end

-- function test_c3_connect_rtlog()
  -- C3.connect("192.168.3.103")
  -- C3.getRTLog()
  -- C3.disconnect()
-- end

function test_c3_rtlog_decode()
  local rtlog_raw_data = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0x66, 0x02, 0x32, 0x8f, 0xae, 0x21, 
                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0xc9, 0x02, 0xea, 0x8f, 0xae, 0x21, 
                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0xca, 0x02, 0x33, 0x27, 0xaf, 0x21,
                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0xc8, 0x02, 0x34, 0x27, 0xaf, 0x21, 
                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0xca, 0x02, 0x80, 0x27, 0xaf, 0x21, 
                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0xc9, 0x02, 0x94, 0x27, 0xaf, 0x21, 
                           0x31, 0x08, 0x01, 0x00, 0xc2, 0xb0, 0x07, 0x00, 0x04, 0x01, 0x00, 0x00, 0x74, 0x2c, 0xaf, 0x21, 
                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0xc8, 0x02, 0x75, 0x2c, 0xaf, 0x21, 
                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0xca, 0x02, 0x88, 0x2c, 0xaf, 0x21,
                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0xc9, 0x02, 0x9d, 0x2c, 0xaf, 0x21 }
  local rtlogs = C3.rtlog_decode(rtlog_raw_data)

  assert_equal(10, #rtlogs)
  assert_equal(1501491250, rtlogs[1].time_second) -- Mon Jul 31 08:54:10 2017
  assert_equal(1501531508, rtlogs[7].time_second) -- Mon Jul 31 20:05:08 2017
  for n,rtlog in pairs(rtlogs) do
    print(n)
    rtlog.print()
  end
end

