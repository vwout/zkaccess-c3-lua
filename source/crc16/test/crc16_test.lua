-- luacheck: no max line length

local lunit = require("lunit")
local CRC = require("crc16.crc16")

module("crc16_test", lunit.testcase, package.seeall)

function test_crc_basic()
  -- Test data generated from https, http://www.lammertbies.nl/comm/info/crc-calculation.html
  lunit.assert_equal(0xBB3D, CRC.crc16("123456789"))
  lunit.assert_equal(0xBB3D, CRC.crc16({"1","2","3","4","5","6","7","8","9"}))
  lunit.assert_equal(0xBB3D, CRC.crc16({49, 50, 51, 52, 53, 54, 55, 56, 57}))
  lunit.assert_equal(0xE9D9, CRC.crc16("abcdefg"))
  lunit.assert_equal(0x0F65, CRC.crc16("0123456789ABCDEF"))
  lunit.assert_equal(0x0F65, CRC.crc16({"0123456789","ABCDEF"}))
end

function test_crc_connect()
  lunit.assert_equal(0x8fd7, CRC.crc16({0x01, 0x76, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00})) --request
  lunit.assert_equal(0x3320, CRC.crc16(string.char(0x01, 0xc8, 0x04, 0x00, 0xd6, 0xcd, 0x00, 0x00))) --response
  lunit.assert_equal(0x47c8, CRC.crc16({0x01, 0xc8, 0x04, 0x00, 0x54, 0xf1, 0x00, 0x00})) --response
end

function test_crc_real_log()
  lunit.assert_equal(0xf687, CRC.crc16({0x01, 0x0b, 0x04, 0x00, 0x3e, 0xe3, 0x02, 0x00})) --request
  lunit.assert_equal(0xbf72, CRC.crc16(string.char(0x01, 0x0b, 0x04, 0x00, 0x78, 0xe5, 0x02, 0x00))) --request
  lunit.assert_equal(0xcd2c, CRC.crc16({0x01, 0xc8, 0x14, 0x00, 0x78, 0xe5, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 0x33, 0x75, 0x21})) --response
  lunit.assert_equal(0x4f24, CRC.crc16(string.char(0x01, 0xc8, 0x14, 0x00, 0x54, 0xf1, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0xda, 0x3e, 0x75, 0x21))) --response
end

function test_crc_disconnect()
  lunit.assert_equal(0x0fde, CRC.crc16({0x01, 0x02, 0x04, 0x00, 0x3a, 0xcf, 0x02, 0x00})) --request
  lunit.assert_equal(0x6a75, CRC.crc16({0x01, 0xc8, 0x04, 0x00, 0x3e, 0xe3, 0x03, 0x00})) --request
end
